컨테이너
- 격리된 공간에서 프로세스가 동작하는 기술
기존 가상화 방식은 주로 OS를 가상화 -> 추가적인 OS를 설치하여 가상화 -> 느림

이미지
컨테이너 실행에 필요한 파일과 설정값등을 포함하고 있는 것

dockerfile: 서버구성을 문서화 (정의 및 지정)
docker build: 도커 이미지 만들기(이미지 생성)
docker run 옵션: 이미지에 붙이는 옵션(구체적인 정보들을 입력)
docker run: 옵션들을 실행(도커 컨테이너 실)

도커 용량 늘리려면
도커 -> Preferences -> Advanced
///
Command
동작중인 컨테이너 확인
docker ps

정지된 컨테이너 확인
docker ps -a

컨테이너 삭제
docker rm[컨테이너id]

컨테이너 모두 삭제
docker rm 'docker ps -a -q'

현재 이미지 확인
docker images

이미지 삭제
docker rmi[이미지id]

컨테이너를 삭제하기 전에 이미지를 삭제할 경우
docker rmi -f[이미지id]

도커 컨테이너에 접속하기
docker exec 명령을 이용
이때 -it를 입력하여야함
docker exec -it 도커id /bin/bash

나올떄는
exit

-it
STDIN 표준 입출력을 열고 가상 tty(pseudo-TTY)를 통해 접속하겠다는 의미

docker -v
도커 버젼 확인

docker pull <이미지 이름>
을 통해 docker.io의 공식 저장소에서 이미지를 다운받음

docker restart 컨테이너id
컨테이너 되살림

